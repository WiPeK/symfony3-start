<?php

namespace PortfolioBundle\Entity;

use Symfony\Component\Validator\Constraints as Assert;
use Doctrine\ORM\Mapping as ORM;


/**
 * @ORM\Entity
 * @ORM\Table(name="contact")
 */
class Contact
{
	/**
	 * @ORM\Column(type="integer")
	 * @ORM\Id
	 * @ORM\GeneratedValue(strategy="AUTO")
	 */
	private $id;

    /**
     * @ORM\Column(type="string", length=255)
     *
     * @Assert\NotBlank
     *
     * @Assert\Email
     * 
     * @Assert\Length(
     * 	max=255
     * )
     */
	private $email;

	/**
	 * @ORM\Column(type="string", length=255)
	 *
     * @Assert\NotBlank
     * 
     *@Assert\Length(
     * 	max=255
     * )
     */
	private $subject;

	/**
	 *@ORM\Column(type="text")
	 *
     * @Assert\NotBlank
     */
	private $message;

	/**
	 * @ORM\Column(type="datetime")
	 */
	private $sendDate;

	// public function save($savePath)
	// {
 //        $paramsNames = array('name', 'email', 'sex', 'birthdate', 'country', 'course', 'invest', 'comments');
 //        $formData = array();
 //        foreach ($paramsNames as $name){
 //            $formData[$name] = $this->{$name};
 //        }

 //        $randVal = rand(1000, 9999);
 //        $dataFileName = sprintf('data_%d.txt', $randVal);

 //        file_put_contents($savePath.$dataFileName, print_r($formData, TRUE));

 //        $file = $this->getPaymentFile();
 //        if(NULL !== $file){
 //            $newName = sprintf('file_%d.%s', $randVal, $file->guessExtension());
 //            $file->move($savePath, $newName);
 //        }
 //    }

	public function getAllAsArray()
	{
		$classFields = array('email', 'subject', 'message');
		$resultArray = array();

		foreach($classFields as $field)
			$resultArray[$field] = $this->$field;

		return $resultArray;

	}

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set email
     *
     * @param string $email
     *
     * @return Contact
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set subject
     *
     * @param string $subject
     *
     * @return Contact
     */
    public function setSubject($subject)
    {
        $this->subject = $subject;

        return $this;
    }

    /**
     * Get subject
     *
     * @return string
     */
    public function getSubject()
    {
        return $this->subject;
    }

    /**
     * Set message
     *
     * @param string $message
     *
     * @return Contact
     */
    public function setMessage($message)
    {
        $this->message = $message;

        return $this;
    }

    /**
     * Get message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * Set sendDate
     *
     * @param \DateTime $sendDate
     *
     * @return Contact
     */
    public function setSendDate($sendDate)
    {
        $this->sendDate = $sendDate;

        return $this;
    }

    /**
     * Get sendDate
     *
     * @return \DateTime
     */
    public function getSendDate()
    {
        return $this->sendDate;
    }
}
